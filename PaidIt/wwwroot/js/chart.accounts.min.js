function InitializeChart(n){var f=[],r,u,i,e,o,s,h;for(var t in n.Accounts)if(n.Accounts[t].Inputs.length!==0){for(r=n.Accounts[t].Inputs,u=[],i=0;i<r.length;i++)e=new Date(r[i].Date),o=r[i].Amount,u.push({x:e,y:o});s={label:t,data:u,backgroundColor:n.Accounts[t].Colour,fill:!0};f.push(s)}chart=new Chart(document.getElementById("myChart"),{type:"line",data:{labels:[],datasets:f},options:{responsive:!0,plugins:{tooltip:{mode:"index"},legend:{labels:{font:{size:20}}}},interaction:{mode:"nearest",axis:"x",intersect:!1},scales:{x:{title:{display:!0,text:"Month",font:{size:20}},ticks:{font:{size:20},color:"rgb(209, 209, 209)"}},y:{beginAtZero:!0,stacked:!0,title:{display:!0,text:"Total Money",font:{size:20}},ticks:{callback:function(n){return"Â£"+n},font:{size:20},color:"rgb(209, 209, 209)"}}}}});h=$("#accountsContainer");for(t in n.Accounts){const i={name:t,label:t,data:n.Accounts[t].Inputs,borderColor:"#ffffff",backgroundColor:n.Accounts[t].Colour,fill:!0},r=CreateAccountButton(i);h.append(r)}UpdateData()}function AddAccount(){console.log("AddAccount");const n=prompt("Enter the name of the account:");if(n){if(accounts[n]){alert("An account with that name already exists.");return}const t={name:n,label:n,backgroundColor:"#ffffff",data:[],borderColor:"#6b6b6b",fill:!0};chart.data.datasets.push(t);chart.update();accounts[n]={Inputs:[]};$("#accountsContainer").append(CreateAccountButton(t));$.ajax({url:"/Home/AddNewAccountAjax",type:"POST",data:{accountName:n},success:function(){alert("Success")},error:function(){alert("An error occurred while calling the C# function.")}})}}function CreateAccountButton(n){const t=$("<span>",{id:"account_button-"+n.name,"class":"account_button",text:n.name,css:{backgroundColor:n.backgroundColor}});return t.addClass("secondary_button").addClass("secondary_button--selectable"),t}function UpdateData(n=0){if(previousMonth!==n){previousMonth=n;let t=new Date(Math.min(...chart.data.datasets.flatMap(n=>n.data.map(n=>new Date(n.x).getTime())))),i=new Date(Math.max(...chart.data.datasets.flatMap(n=>n.data.map(n=>new Date(n.x).getTime()))));chart.data.labels=GetMonthLabels(t,i);chart.data.datasets.forEach(n=>{const t=[];chart.data.labels.forEach(i=>{const r=n.data.find(n=>new Date(n.x).toLocaleString("default",{month:"long",year:"numeric"})===i),u=new Date(i),f=r?r.y:t.length>0?t[t.length-1].y:0;t.push({x:u,y:f})});n.data=t});chart.update()}}function GetMonthLabels(n,t){const i=[];for(let r=n;r<=t;r.setMonth(r.getMonth()+1))i.push(r.toLocaleString("default",{month:"long",year:"numeric"}));return i}function accountButtonClicked(){var n=$(this).index();if(!(n>=chart.data.datasets.length)){var t=chart.data.datasets[n],i=chart.getDatasetMeta(n),r=i.hidden===null?t.hidden:i.hidden;t.hidden=!r;i.hidden=!r;t.hidden?$(this).css("opacity","0.2"):$(this).css("opacity","1");chart.update()}}function editAccount(){$("#editAccountCover").removeClass("d-none");$("#primaryChart").addClass("d-none");const n=$("#editAccountDropdown");n.empty();for(const t in accounts){const i=$("<option>",{value:t,text:t});n.append(i)}}var chart;let accounts=[],previousMonth=1;window.onload=function(){const n=$("#accountsContainer").data("chart");InitializeChart(n)};$("#addAccountBtn").on("click",AddAccount);$(document).on("click",".account_button",accountButtonClicked);$("#editAccountBtn").on("click",editAccount);