@{
    ViewData["Title"] = "Home Page";
}

@using Microsoft.AspNetCore.Components;
@using Microsoft.JSInterop;

@*
    TODO:
    - Make it so the colours are set and not randomized every time. Make colours able to change
    - Allow creation of basic "goals" with the information, again, stored in the JSON.
    - Allow deletion of bank accounts showing but keep the data in userdata.JSON
        - Upon account deletion add date data of account being at £0
*@

<div id="root">
    <div id="container">
        <div id="heading">
            <h1>PaidIt</h1>
            <h2>ACCOUNTS</h2>
            <div id="accountsContainer">
                <button type="button" onclick="AddAccount()">Add Account</button>
            </div>
        </div>

        <div id="accountPopUp">
            <button id="renameButton">Rename</button>
            <button id="deleteButton">Delete</button>
        </div>

        <!-- <div class="financeInfo">
            @*<button type="button" class="smallButton" onclick="UpdateData(6)">6 Months</button>
            <button type="button" class="smallButton" onclick="UpdateData(12)">Year</button>
            <button type="button" class="smallButton" onclick="UpdateData(60)">5 Years</button>*@
            <button type="button" id="allTimeButton" class="smallButton" onclick="UpdateData(0)">All Time</button>
        </div> -->

        <div id="chart">
            <canvas id="myChart" width="600" height="400"></canvas>
        </div>
    </div>

    <button type="button" class="fixedButton" id="inputWindowButton">+</button>

    <div id="hiddenSection">
        <div class="form-group">
            <label for="accountDropdown">Account Name:</label>
            <select class="form-control" id="accountDropdown"></select>
        </div>
        <div class="form-group">
            <label for="amount">Amount:</label>
            <input type="number" class="form-control" id="amount" placeholder="Enter amount">
        </div>
        <div class="form-group">
            <label for="date">Date:</label>
            <input type="date" class="form-control" id="date">
        </div>
        <button type="button" id="submitInput" onclick="AddData()">Add Data</button>

        <div id="gap"></div>

        <div>
            <form method="post" enctype="multipart/form-data" asp-controller="Home" asp-action="OverwriteUserdata">
                <div class="form-group">
                    <label for="file">Upload userdata.JSON file</label>
                    <input type="file" id="fileUpload" name="userdataJSON">
                </div>
                <button type="submit">Upload</button>
            </form>
        </div>
    </div>

    

    <script>
        var buttonContainer = document.getElementById("accountsContainer");
        var dropdown = document.getElementById("accountDropdown");

        window.onload = function () {
            var jsonData = '@Html.Raw(Json.Serialize(ViewBag.ChartData))';
            const data = JSON.parse(jsonData);
            InitializeChart(data);

            $("#inputWindowButton").click(function () {
                $("#hiddenSection").fadeToggle(400);
            });

            $("#submitInput").click(function () {
                $("#hiddenSection").fadeToggle(400);
            });
        };

        function openPopup() {
            // Code to open the popup goes here
            // Replace with your own implementation
            alert('Popup opened!');
        }
    </script>
</div>