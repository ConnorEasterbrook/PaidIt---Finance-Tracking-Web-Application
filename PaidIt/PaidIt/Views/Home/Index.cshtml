@{
    ViewData["Title"] = "Home Page";
    var currency = "GBP";
}

@using Microsoft.AspNetCore.Components;
@using Microsoft.JSInterop;

<div id="root">
    <div id="container">
        <div id="heading">
            <div>
                <h1>Accounts</h1>
            </div>
            <div id="content">
                <button type="button" class="account" id="accountOne">ACCOUNT</button>
                <button type="button" class="account" onclick="AddAccount()">Add Account</button>
            </div>
            <div>
                <h1>Summary</h1>
                <h2>
                    £0.00
                </h2>
            </div>
        </div>

        <div id="heading">
            <h1>Financial History</h1>
        </div>

        <div class="financeInfo">
            <button type="button" class="smallButton" onclick="UpdateData(6)">6 Months</button>
            <button type="button" class="smallButton" onclick="UpdateData(12)">Year</button>
            <button type="button" class="smallButton" onclick="UpdateData(60)">5 Years</button>
            <button type="button" class="smallButton" onclick="UpdateData(0)">All Time</button>
        </div>

        <div>
            <h3><br>FINANCIAL CHART</h3>
        </div>

        <div id="chart">
            <canvas id="myChart" width="600" height="400"></canvas>
        </div>

        <h2>Balance Change:</h2>
        <h3>+/- £0.00</h3>
    </div>

    <div class="form-group">
        <label for="accountName">Account Name:</label>
        <input type="text" class="form-control" id="accountName" placeholder="Enter account name">
    </div>
    <div class="form-group">
        <label for="amount">Amount:</label>
        <input type="number" class="form-control" id="amount" placeholder="Enter amount">
    </div>
    <div class="form-group">
        <label for="date">Date:</label>
        <input type="date" class="form-control" id="date">
    </div>
    <button type="button" class="btn btn-primary" onclick="AddData()">Add Data</button>

    <script>
        var chart;

        window.onload = InitializeChart;

        function InitializeChart()
        {
            chart = new Chart(document.getElementById("myChart"), {
                type: 'line',
                data: {
                    labels: [],
                    datasets: []
                },
                options: {
                    responsive: true,
                    plugins: {
                        tooltip: {
                            mode: 'index'
                        },
                        legend: {
                            labels: {
                                font: {
                                    size: 20
                                }
                            }
                        }
                    },
                    interaction: {
                        mode: 'nearest',
                        axis: 'x',
                        intersect: false
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Month',
                                font: {
                                    size: 20
                                }
                            },
                            ticks: {
                                font: {
                                    size: 20,
                                },
                                color: 'rgb(209, 209, 209)'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            stacked: true,
                            title: {
                                display: true,
                                text: 'Total Money',
                                font: {
                                    size: 20
                                }
                            },
                            ticks: {
                                callback: function (value, index, values)
                                {
                                    if ('@currency' === "USD")
                                    {
                                        return '$' + value;
                                    } else if ('@currency' === "GBP")
                                    {
                                        return '£' + value;
                                    }
                                },
                                font: {
                                    size: 20
                                },
                                color: 'rgb(209, 209, 209)'
                            }
                        }
                    }
                }
            });
        }

        function AddAccount()
        {
            const accountName = prompt("Enter the name of the account:");
            if (accountName)
            {
                const accountData = {
                    label: accountName,
                    data: [],
                    borderColor: "#6b6b6b",
                    backgroundColor: getRandomColor(),
                    fill: true,
                };
                chart.data.datasets.push(accountData);
                chart.update();
            }
        }

        function AddData()
        {
            const accountName = document.getElementById("accountName").value;
            const amount = parseFloat(document.getElementById("amount").value);
            const date = document.getElementById("date").value;

            const accountIndex = accounts.findIndex(account => account.name === accountName);
            if (accountIndex === -1)
            {
                alert(`Account ${accountName} does not exist`);
                return;
            }

            if (isNaN(amount))
            {
                alert("Please enter a valid amount");
                return;
            }

            const parsedDate = new Date(date);
            if (isNaN(parsedDate.getTime()))
            {
                alert("Please enter a valid date");
                return;
            }

            const accountData = chart.data.datasets[accountIndex].data;
            const label = chart.data.datasets[accountIndex].label;
            const index = accountData.findIndex(data => data.x === parsedDate);
            if (index !== -1)
            {
                accountData[index].y += amount;
            } else
            {
                accountData.push({ x: parsedDate, y: amount });
            }

            chart.update();
        }

        function UpdateData(months)
        {
            console.log(months);
        }
    </script>
</div>